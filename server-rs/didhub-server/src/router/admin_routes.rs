use axum::{
    routing::{delete, get, post},
    Router,
};

use didhub_auth as auth;
use didhub_metrics as metrics;

pub fn build_admin_routes(auth_state: &auth::AuthState) -> Router {
    Router::new()
        .route("/users", get(crate::routes::admin::users::list_users))
        .route("/users", post(crate::routes::admin::users::create_user))
        .route(
            "/users/names",
            get(crate::routes::admin::users::list_user_names),
        )
        .route(
            "/users/{id}",
            get(crate::routes::admin::users::get_user)
                .put(crate::routes::admin::users::update_user)
                .delete(crate::routes::admin::users::delete_user),
        )
        .route(
            "/uploads",
            get(crate::routes::admin::uploads::list_uploads_admin),
        )
        .route(
            "/uploads/{name}",
            delete(crate::routes::admin::uploads::delete_upload_admin),
        )
        .route(
            "/uploads/purge",
            post(crate::routes::admin::uploads::purge_uploads_admin),
        )
        .route(
            "/system-requests",
            get(crate::routes::systems::requests::list_system_requests),
        )
        .route(
            "/system-requests/{id}/decide",
            post(crate::routes::systems::requests::decide_system_request),
        )
        .route(
            "/settings",
            get(crate::routes::admin::settings::list_settings)
                .put(crate::routes::admin::settings::bulk_upsert_settings),
        )
        .route(
            "/settings/{key}",
            get(crate::routes::admin::settings::get_setting)
                .put(crate::routes::admin::settings::upsert_setting),
        )
        .route(
            "/admin/reload-upload-dir",
            post(crate::routes::admin::misc::reload_upload_dir),
        )
        .route(
            "/admin/migrate-upload-dir",
            post(crate::routes::admin::misc::migrate_uploads),
        )
        .route(
            "/admin/redis",
            get(crate::routes::admin::misc::redis_status),
        )
        .route(
            "/admin/update/check",
            get(crate::routes::admin::misc::check_updates),
        )
        .route(
            "/admin/update",
            post(crate::routes::admin::misc::perform_update_endpoint),
        )
        .route(
            "/admin/digest/custom",
            post(crate::routes::admin::misc::post_custom_digest),
        )
        .route(
            "/admin/db/query",
            post(crate::routes::admin::misc::query_database),
        )
        .route(
            "/admin/oidc",
            get(crate::routes::auth::oidc::list_providers),
        )
        .route(
            "/oidc/{id}/enabled",
            post(crate::routes::auth::oidc::set_enabled),
        )
        .route(
            "/oidc/{id}/secret",
            get(crate::routes::auth::oidc::get_secret),
        )
        .route(
            "/oidc/{id}/secret",
            post(crate::routes::auth::oidc::update_secret),
        )
        .route("/audit", get(crate::routes::admin::audit::list_audit))
        .route(
            "/audit/purge",
            post(crate::routes::admin::audit::purge_audit),
        )
        .route(
            "/audit/clear",
            post(crate::routes::admin::audit::clear_audit),
        )
        .route(
            "/housekeeping/jobs",
            get(crate::routes::admin::housekeeping::list_jobs),
        )
        .route(
            "/housekeeping/runs",
            get(crate::routes::admin::housekeeping::list_runs)
                .post(crate::routes::admin::housekeeping::clear_runs),
        )
        .route(
            "/housekeeping/trigger/{name}",
            post(crate::routes::admin::housekeeping::trigger_job),
        )
        .route("/metrics", get(metrics::metrics_handler))
        .layer(axum::middleware::from_fn(auth::admin_guard_middleware))
        .with_state(auth_state.clone())
}
